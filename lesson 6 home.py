# 5. Дан список чисел. Определите, сколько в этом списке элементов, которые больше двух своих соседей (слева и справа),
# и выведите количество таких элементов. Крайние элементы списка никогда не учитываются, поскольку у них недостаточно
# соседей.
#

from random import randint
lst1 = [randint(1, 300) for _ in range(30)]#Возьму для примера случайно сгенереный список в диапазоне 30 элементов
print(lst1)
count = 0
for i in range(1, len(lst1) - 1): #Тут мы ставим условие для того, чтобы не считался 1 и последний элементы
    if lst1[i - 1] < lst1[i] > lst1[i + 1]:
        count = count + 1
print('Количество таких элементов составит ',count, 'штук в сгенерированном ряду чисел')




#
# 7. Петя перешёл в другую школу. На уроке физкультуры ему понадобилось определить своё место в строю. Помогите ему это
# сделать.
#     - Программа получает на вход невозрастающую последовательность натуральных чисел, означающих рост каждого человека в
#     строю. После этого вводится число X – рост Пети. Все числа во входных данных натуральные и не превышают 200.
#     - Выведите номер, под которым Петя должен встать в строй. Если в строю есть люди с одинаковым ростом, таким же, как
#     у Пети, то он должен встать после них.
#
#     (
# 	    1. Здесь понадобится сортировка. Вот пример:
# 	    	a = [5, 8, 2, 8, 4, 7, 0, 3, 1, 6, 9]
# 			print(a)										# [5, 8, 2, 8, 4, 7, 0, 3, 1, 6, 9]
# 			a.sort(reverse=True)
# 			print(a)										# [9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0]
#
# 		Параметр reverse=True отсортирует список в порядке убывания элементов.
#
# 		2. Так же, понадобится list comprehension который позволит создать список случайных значений
#     )

from random import randint
from copy import deepcopy
lst1 = [randint(120, 140) for _ in range(15)]
print(lst1)
x = int(input('Введите рост Пети - его рост не более 200 см :'))
lst2 = deepcopy(lst1)
lst2.append(x)
print(lst2)
lst2.sort()
lst2.reverse()
print(lst2)
count = 0
for i in range(0, len(lst2)):
    if lst2[i] == x:
        count = i + 1
print('Петя должен встать в колонну на ', count, ' место с начала строя!')



# 11. Дан список из чисел и индекс элемента в списке `k`. Удалите из списка элемент с индексом `k`, сдвинув влево все
# элементы, стоящие правее элемента с индексом `k`.
#     a). Программа получает на вход список, затем число `k`. Программа сдвигает все элементы, а после этого удаляет
#     последний элемент списка при помощи метода `pop()` без параметров.
#     b). Программа должна осуществлять сдвиг непосредственно в списке, а не делать это при выводе элементов. Также нельзя
#     использовать дополнительный список.
#     c). Также не следует использовать метод `pop(k)` с параметром.
#     d). Использовать оператор del НЕЛЬЗЯ!

from random import randint
l = [randint(1, 700) for _ in range(5)]
print(l)
k = int(input('Введите индекс элемента списка: '))
k += 1
l = l[k:] + l[:k]
print(l)
l.pop()
print(l)